// Generated by CoffeeScript 1.3.3

window.onload = function() {
  var change_mode, clear, create, get, mode, name, post_store, render_topics, right, say, say_action, saying, socket, topic_store, topics;
  socket = io.connect('http://noisy_chat.cnodejs.net:80/chat');
  socket.on('need-refresh', function() {
    return location.reload();
  });
  socket.on('ready', function() {
    return console.log('ready');
  });
  window.focus();
  saying = false;
  mode = '';
  get = function(id) {
    return document.getElementById(id);
  };
  right = get('right');
  topics = get('topics');
  create = get('create');
  say = get('say');
  name = get('name');
  clear = get('clear');
  change_mode = function(item) {
    if (item !== mode) {
      mode = item;
      say.style.color = (item === 'say' ? 'hsl(0,0%,50%)' : 'hsl(0,0%,80%)');
      if (item !== 'say') {
        return socket.emit('away');
      }
    }
  };
  topic_store = {};
  post_store = {};
  topics.onclick = function() {
    if (mode !== 'topics') {
      change_mode('topics');
      return render_topics();
    }
  };
  create.onclick = function() {
    var create_box, create_msg, create_send;
    if (mode !== 'create') {
      change_mode('create');
      right.innerHTML = '<div id="create_msg">Start a New Topic Here: (5 < Length < 40)</div>\
        <textarea id="create_box"></textarea>\
        <div id="create_send">Waiting</div>';
      create_msg = get('create_msg');
      create_box = get('create_box');
      create_send = get('create_send');
      create_box.focus();
      return create_box.oninput = function() {
        if (create_box.value.length < 6) {
          create_msg.innerText = 'Add More Words to be a Topic:';
          create_send.innerText = 'Waiting';
          create_send.onclick = function() {};
          return create_send.onkeydown = function() {};
        } else if (create_box.value.length > 40) {
          create_msg.innerText = 'The Title Contains too many Words..';
          create_send.innerText = 'Waiting';
          create_send.onclick = function() {};
          return create_send.onkeydown = function() {};
        } else {
          create_msg.innerText = 'Right Length now';
          create_send.innerText = 'Send';
          create_send.onclick = function() {
            socket.emit('add-topic', create_box.value);
            create_msg.innerText = 'OK, You\'ve Sent the Topic Successfully';
            create_send.innerText = 'Sent';
            create_send.onclick = function() {};
            return create_box.blur();
          };
          return create_box.onkeydown = function(e) {
            if (e.keyCode === 13) {
              create_send.onclick();
              return false;
            }
          };
        }
      };
    } else {
      return (get('create_box')).focus();
    }
  };
  name.onclick = function() {
    var name_box, name_msg, name_send;
    if (mode !== 'name') {
      change_mode('name');
      right.innerHTML = '<div id="name_msg">Set Your Name: (1 < Length < 20)</div>\
        <textarea id="name_box"></textarea>\
        <div id="name_send">Waiting</div>';
      name_msg = get('name_msg');
      name_box = get('name_box');
      name_send = get('name_send');
      name_box.focus();
      return name_box.oninput = function() {
        if (name_box.value.length < 2) {
          name_msg.innerText = 'Too Short';
          name_send.innerText = 'Waiting';
          name_send.onclick = function() {};
          return name_box.onkeydown = function() {};
        } else if (name_box.value.length > 20) {
          name_msg.innerText = 'Too Long now..';
          name_send.innerText = 'Waiting';
          name_send.onclick = function() {};
          return name_box.onkeydown = function() {};
        } else {
          name_msg.innerText = 'This name should be OK';
          name_send.innerText = 'Send';
          name_send.onclick = function() {
            socket.emit('set-name', name_box.value);
            localStorage.name = name_box.value;
            name_msg.innerText = 'Already Sent';
            name_send.innerText = 'Sent';
            name_send.onclick = function() {};
            return name_box.blur();
          };
          return name_box.onkeydown = function(e) {
            if (e.keyCode === 13) {
              name_send.onclick();
              return false;
            }
          };
        }
      };
    } else {
      return (get('name_box')).focus();
    }
  };
  if (localStorage.name != null) {
    socket.emit('set-name', localStorage.name);
    socket.emit('fresh-list');
  } else {
    name.onclick();
  }
  clear.onclick = function() {
    topic_store = {};
    return socket.emit('fresh-list');
  };
  render_topics = function() {
    var html, key, value, _results;
    html = '';
    for (key in topic_store) {
      value = topic_store[key];
      html += "<div class='post' id='" + value.id + "'>        <div class='date'>" + value.time + "</div>        <div class='reply'>+" + value.reply + "</div>        <div class='name'>" + value.author + "</div>        <div class='text'>" + value.content + "</div>        </div>";
    }
    right.innerHTML = html;
    _results = [];
    for (key in topic_store) {
      value = topic_store[key];
      _results.push((function(key) {
        return (get(key)).onclick = function() {
          return socket.emit('topic', key);
        };
      })(key));
    }
    return _results;
  };
  socket.on('fresh-list', function(data) {
    topic_store = data;
    change_mode('topics');
    return render_topics();
  });
  socket.on('add-topic', function(data) {
    var add_div;
    topic_store[data.id] = data;
    console.log(data, mode);
    if (mode === 'topics') {
      add_div = document.createElement('div');
      add_div.setAttribute('class', 'post');
      add_div.innerHTML = "          <div class='date'>" + data.time + "</div>          <div class='reply'>+" + data.reply + "</div>          <div class='name'>" + data.author + "</div>          <div class='text'>" + data.content + "</div>";
      right.appendChild(add_div);
      return add_div.onclick = function() {
        return (function(key) {
          return socket.emit('topic', key);
        })(data.id);
      };
    }
  });
  socket.on('topic', function(topic) {
    var key, topic_view, value, _ref, _results;
    if (mode !== 'say') {
      change_mode('say');
      if (topic_store[topic] != null) {
        topic_view = topic_store[topic];
      } else {
        topic_view = {
          id: topic,
          reply: -1,
          name: '?',
          text: '??'
        };
      }
      right.innerHTML = "        <div class='post head'>          <div class='date'>" + topic_view.time + "</div>          <div class='name'>" + topic_view.author + "</div>          <div id='block'>Click to Send Remove Signal</div>          <div class='text'>" + topic_view.content + "</div>        </div>";
      (get('block')).onclick = function() {
        return socket.emit('delete-topic', topic);
      };
      if (post_store[topic] != null) {
        _ref = post_store[topic];
        _results = [];
        for (key in _ref) {
          value = _ref[key];
          _results.push(right.innerHTML += "            <div class='post'>              <div class='date'>" + value.time + "</div>              <div class='name'>" + value.author + "</div>              <div class='text'>" + value.content + "</div>            </div>");
        }
        return _results;
      }
    }
  });
  say_action = function() {
    var say_area;
    if (saying) {
      saying = false;
      socket.emit('close', (get('say_box')).value);
      (get('say_area')).innerHTML += "<div class='text'>        " + (get('say_box')).value + "</div>";
      (get('say_area')).removeChild(get('say_box'));
      return (get('say_area')).removeAttribute('id');
    } else {
      saying = true;
      say_area = document.createElement('div');
      say_area.setAttribute('class', 'post');
      say_area.setAttribute('id', 'say_area');
      say_area.innerHTML = "        <div class='name'>Me</div><br>        <textarea id='say_box'></textarea>";
      right.appendChild(say_area);
      (get('say_box')).focus();
      socket.emit('open');
      return (get('say_box')).oninput = function() {
        return socket.emit('sync', (get('say_box')).value);
      };
    }
  };
  say.onclick = function() {
    if (mode === 'say') {
      return say_action();
    }
  };
  document.onkeydown = function(e) {
    if (e.keyCode === 13) {
      if (mode === 'say') {
        say_action();
        return false;
      }
    }
  };
  socket.on('close', function(data) {
    if (!(post_store[data.topic] != null)) {
      post_store[data.topic] = {};
    }
    post_store[data.topic][data.id] = data;
    if (topic_store[data.topic] != null) {
      topic_store[data.topic].reply += 1;
      console.log(topic_store[data.topic]);
      if (mode === 'topics') {
        return render_topics();
      }
    }
  });
  return socket.on('sync', function(data) {
    var say_area;
    if ((get(data.thread)) != null) {
      return (get(data.thread)).innerHTML = "        <div class='name'>" + data.author + "</div>        <div class='text'>" + data.content + "</div>";
    } else {
      say_area = document.createElement('div');
      say_area.setAttribute('class', 'post');
      say_area.setAttribute('id', data.thread);
      say_area.innerHTML = "        <div class='name'>" + data.author + "</div>        <div class='text'>" + data.content + "</div>";
      return right.appendChild(say_area);
    }
  });
};
